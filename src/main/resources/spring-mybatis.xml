<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <!-- MyBatis整合配置-->

    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--
    配置数据源，即数据库连接池
    dbcp 半自动化操作 不能自动连接
    c3p0 自动化操作（自动的加载配置文件 并且设置到对象里面）
    druid 自动化操作 速度快！！！
    -->
    <!--c3p0-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--&lt;!&ndash; 配置连接池属性 &ndash;&gt;-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->

        <!--&lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;-->
        <!--<property name="maxPoolSize" value="30"/>-->
        <!--<property name="minPoolSize" value="10"/>-->
        <!--&lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--&lt;!&ndash; 获取连接超时时间 &ndash;&gt;-->
        <!--<property name="checkoutTimeout" value="10000"/>-->
        <!--&lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;-->
        <!--<property name="acquireRetryAttempts" value="2"/>-->
    <!--</bean>-->

    <!--druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 配置初始化大小、最小、最大连接池数量-->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />
        <!-- 配置获取连接超时时间 -->
        <property name="maxWait" value="60000" />
    </bean>

    <!--
    配置SqlSessionFactoryBean，用于实现可以直接在Spring的IOC中获取SqlSessionFactory
    保证在BookServiceImpl等各个service对象中，就可以自动注入SqlSessionFactory属性
    -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 设置MyBatis核心配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>

        <!--以下配置交由Spring实现，因此无需在MyBatis核心配置文件中再进行配置-->
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--
     配置Mapper接口扫描，由Spring创建指定包下的所有Mapper接口的动态代理实现类对象，并将它们交由IOC容器管理
     保证在BookServiceImpl等各个service对象中，就可以自动注入BookMapper属性
     -->
    <!--解释 ：https://www.cnblogs.com/jpfss/p/7799806.html-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 给出需要扫描Mapper接口所在的包 -->
        <property name="basePackage" value="com.ouyue.ssm.mapper"/>
    </bean>

</beans>